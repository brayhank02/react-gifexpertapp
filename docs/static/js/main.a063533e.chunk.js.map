{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExperApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","catch","err","console","warn","GifGridItem","className","src","alt","GifGrid","image","GifExperApp","ReactDOM","render","document","getElementById"],"mappings":"yMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAcvC,OACI,sBAAMC,SAVW,SAAEC,GACnBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAES,GAAF,OAAoBP,GAApB,mBAAkCO,OACjDN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAUT,EACVU,SAfc,SAAEP,GAAaF,EAAcE,EAAMQ,OAAOF,a,+BCWzDG,EAjBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAWH,GAFtD,+DAGYI,MAAOF,GAHnB,cAGNG,EAHM,gBAIWA,EAAUC,OAJrB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAK,YAA6B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,OACjC,MAAO,CACHF,GAAIA,EACJC,MAAOA,EACPT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAV1B,kBAcLM,GAdK,4CAAH,sDCwBEM,EAtBM,SAAEd,GAAe,IAAD,EAEPd,mBAAS,CAC/BqB,KAAM,GACNQ,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAmBjC,OAXAC,qBAAW,WACPnB,EAASC,GACJmB,MAAM,SAAEP,GACLK,EAAS,CACLV,KAAMK,EACNG,SAAS,OAGhBK,OAAO,SAAEC,GAAF,OAAWC,QAAQC,KAAMF,QACtC,CAAErB,IAEEgB,GCTIQ,EAVK,SAAC,GAAoB,IAAlBb,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAE1B,OACI,sBAAKuB,UAAY,6CAAjB,UACI,qBAAKC,IAAQxB,EAAMyB,IAAQhB,IAC3B,kCAAMA,EAAN,WCoBGiB,EAvBC,SAAC,GAAkB,IAAhB5B,EAAe,EAAfA,SAAe,EAEKc,EAAcd,GAAnCY,EAFgB,EAEtBL,KAAeQ,EAFO,EAEPA,QAEvB,OACI,qCACI,6BAAMf,IAEJe,GAAW,4CAEb,qBAAKU,UAAY,YAAjB,SAEQb,EAAOH,KAAI,SAAEoB,GAAF,OACP,cAAC,EAAD,eAESA,GADGA,EAAMnB,aCS3BoB,EAvBK,WAAO,IAAD,EAEc5C,mBAAS,CAAC,mBAFxB,mBAEfQ,EAFe,KAEHT,EAFG,KAItB,OACI,qCACI,6CACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBACA,6BAEQS,EAAWe,KAAK,SAAET,GAAF,OACZ,cAAC,EAAD,CAEIA,SAAaA,GADLA,Y,MCZpC+B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a063533e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( event ) => { setInputValue(event.target.value) };\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();  \r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( ( categories ) => [ inputValue,...categories ] );\r\n            setInputValue('');\r\n        };     \r\n    };\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit } >\r\n            <input \r\n                type = \"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange } \r\n            />           \r\n        </form>\r\n    );\r\n};\r\n\r\n//Este propTypes hace que sea obligatorio el prop de de setCategories\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n\r\n//Exporto mi AddCategory\r\nexport default AddCategory\r\n","\r\nconst getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=uybUaPVChOLZbFYgTjKm8IzexXlmGVEi`;\r\n    const respuesta = await fetch( url )\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( ({ id, title, images })  => {\r\n        return {\r\n            id: id,\r\n            title: title,\r\n            url: images?.downsized_medium.url,\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;","import { useEffect, useState } from 'react';\r\nimport getGifs from '../helpers/getGif';\r\n\r\nconst useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    //Solo se ejecuta esta funcion cuando el componente es renderizado por primera vez\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( ( images ) => {\r\n                setState({\r\n                    data: images,\r\n                    loading: false,\r\n                });\r\n            })\r\n            .catch( ( err ) => console.warn( err ))\r\n    }, [ category ])\r\n\r\n    return state; // { data: [], loading: true }\r\n}\r\n\r\nexport default useFetchGifs;","\r\nimport React from 'react'\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n\r\n    return (\r\n        <div className = \"card animate__animated animate__zoomInDown\">\r\n            <img src = { url } alt = { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n    const { data: images , loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p>Cargando...</p> }\r\n\r\n            <div className = \"card-grid\">   \r\n                {\r\n                    images.map(( image ) => (\r\n                        <GifGridItem \r\n                            key = { image.id }\r\n                            { ...image }/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n//FC(Fincional Compounent)\r\nconst GifExperApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Rick and Morty']);\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExperApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr></hr>\r\n            <ol>\r\n                {\r\n                    categories.map( ( category ) => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category } \r\n                        />\r\n                    ))         \r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExperApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExperApp from './GifExperApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExperApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}